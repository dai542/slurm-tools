#!/usr/bin/env python3

"""
jobhist

View compact history of jobs

This script requires:
  - Python 3.5+ (for the subprocess.run command)
  - Slurm (any recent version should work)
  - Slurm configured with:
    - JobAcctGatherType=jobacct_gather/linux or jobacct_gather/cgroup

Notes:
  - Based on output from sacct
  - Default setting is job history for past day
  - To filter by state, use grep
"""

from datetime import datetime, timedelta
import argparse
import subprocess
import sys

# Set up arguments and options
parser = argparse.ArgumentParser(
    prog = "jobhist",
    formatter_class = argparse.RawDescriptionHelpFormatter,
    description = "View compact history of jobs",
    epilog = """\
examples:

jobhist
jobhist -s 2024-07-01
jobhist -s 2024-07-01 -e 2024-07-02
jobhist -u ttrojan
jobhist -p largemem
jobhist -u ttrojan -p main
jobhist -u ttrojan -s 2024-07-01 -p gpu
jobhist -a ttrojan_123

notes:

to view more job details, run jobinfo <jobid>

support:

https://github.com/uschpc/slurm-tools/issues"""
)
parser.add_argument(
    "-a",
    "--account",
    help = "account to query for history (comma-separated list)"
)
parser.add_argument(
    "-e",
    "--end",
    help = "end date to query for history (YYYY-MM-DD)"
)
parser.add_argument(
    "-p",
    "--partition",
    help = "partition to query for history (comma-separated list)"
)
parser.add_argument(
    "-s",
    "--start",
    help = "start date to query for history (YYYY-MM-DD)"
)
parser.add_argument(
    "-u",
    "--user",
    help = "user to query for history (comma-separated list)"
)
parser.add_argument(
    "-V",
    "--version",
    action = "store_true",
    help = "print version"
)
args = parser.parse_args()

if args.version:
    print("jobhist 2.0.0")
    sys.exit(0)

print("----------------------------------------------------------------------------------------------------")
print("Job ID         Startdate       User     Job Name  Partition      State     Elapsed Nodes CPUs Memory")
print("------------- ---------- ---------- ------------ ---------- ---------- ----------- ----- ---- ------")
fmt = "jobid%-13,start%10,user%10,jobname%12,partition,state,elapsed%11,nnodes%5,reqcpus%4,reqmem%6"
cmd = ["sacct", "-a", "-n", "-X", "-o", fmt]
if args.start is not None and args.end is not None:
    cmd = cmd + ["-S", args.start, "-E", args.end]
elif args.start is not None and args.end is None:
    cmd = cmd + ["-S", args.start]
elif args.start is None and args.end is not None:
    print("Error: no start date given")
    sys.exit(1)
else:
    date = datetime.today() - timedelta(days = 1)
    date = date.strftime("%Y-%m-%d")
    cmd = cmd + ["-S", date]
if args.account is not None:
    cmd = cmd + ["-A", args.account]
if args.partition is not None:
    cmd = cmd + ["-r", args.partition]
if args.user is not None:
    cmd = cmd + ["-u", args.user]
subprocess.run(cmd)
